{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "csye6225 application formation template",

   "Parameters": {
  "DBName": {
    "Description": "Database Name",
    "Type": "String"
  },
  "DBUser": {
    "Description": "Database User",
    "Type": "String"
  },
  "DBPassword": {
    "Description": "Database Password",
    "Type": "String"
  },
  "bucketName": {
    "Description": "Bucket name",
    "Type": "String"
  },
  "DBEngine": {
    "Description": "DB Engine",
    "Type": "String"
  },
  "DBAllocatedStorage": {
    "Description": "DB AllocatedStorage",
    "Type": "String"
  },
  "DBEngineVersion": {
    "Description": "DB EngineVersion",
    "Type": "String"
  },
  "DBInstanceClass": {
    "Description": "DB InstanceClass",
    "Type": "String"
  },
  "DBInstanceIdentifier": {
    "Description": "DBInstanceIdentifier",
    "Type": "String"
  },
  "EC2ImageId":{
      "Description": "EC2 ImageId",
      "Type": "String"
    },
    "EC2InstanceType":{
      "Description": "EC2 InstanceType",
      "Type": "String"
    },
    "EbsDeviceName" : {
      "Description": "Ebs DeviceName",
      "Type": "String"
    },
    "EbsVolumeType" : {
      "Description": "Ebs VolumeType",
      "Type": "String"
    },
    "EbsVolumeSize" : {
      "Description": "Ebs VolumeSize",
      "Type": "Number"
    },
    "KeyPairName" : {
      "Description": "Key Pair Name",
      "Type": "String"
    },
    "MySqlClientPass":{
    "Description": "Root password for MySQL client on EC2 Instance",
    "Type": "String"
  }
  },
   "Resources" : {

    "NVNDynamoDBTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
      "AttributeDefinitions": [
        {
          "AttributeName": "Id",
          "AttributeType": "S"
        }
      ],
      "KeySchema": [
        {
          "AttributeName": "Id",
          "KeyType": "HASH"
        }
      ],
      "ProvisionedThroughput": {
        "ReadCapacityUnits": "5",
        "WriteCapacityUnits": "5"
      },
      "TableName": "csye6225"
          }
    },

    "NVNCloudS3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": { "Ref": "bucketName" }
      }
    },

    "NVNCloudS3BucketPolicy":{
      "Type" : "AWS::S3::BucketPolicy",
      "Properties" : {
        "Bucket" : {"Ref": "NVNCloudS3Bucket"},
        "PolicyDocument": {
          "Statement": [{
            "Action":["*"],
            "Effect":"Allow",
            "Resource": { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "bucketName" } , "/*" ]]},
            "Principal":"*",
            "Condition":{
              "StringLike":{
                "aws:Referer":[
                  "*"
                ]
              }
            }
            }]
        }
      }
    },


    "NVNCloudRDSDB": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "Engine": { "Ref": "DBEngine"},
        "AllocatedStorage": { "Ref": "DBAllocatedStorage"},
        "EngineVersion": { "Ref": "DBEngineVersion"},
        "DBInstanceClass": { "Ref": "DBInstanceClass"},
        "MultiAZ": "false",
        "DBInstanceIdentifier": { "Ref": "DBInstanceIdentifier"},
        "MasterUsername": { "Ref": "DBUser" },
        "MasterUserPassword": { "Ref": "DBPassword" },
        "PubliclyAccessible": "false",
        "DBName": { "Ref": "DBName" },
        "VPCSecurityGroups": [{ "Fn::ImportValue" : "RDSGroupName" }],
        "DBSubnetGroupName": { "Fn::ImportValue" : "DBSubnetGroupName" }
      },
      "DeletionPolicy": "Delete"
    },


    "EC2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": { "Ref": "EC2ImageId" },
        "KeyName" : { "Ref": "KeyPairName" },
        "IamInstanceProfile" :{"Fn::ImportValue" : "EC2InstanceProfile"},
        "InstanceType": { "Ref": "EC2InstanceType" },
           "SubnetId" : { "Fn::ImportValue": "PublicSubnet1"},
           "SecurityGroupIds" : [{"Fn::ImportValue" : {"Fn::Sub" : "EC2GroupName"}}],
           "Tags":[{
            "Key": "Name",
            "Value": "CloudEC2"
            }],
           "BlockDeviceMappings": [
                {
                    "DeviceName" : { "Ref": "EbsDeviceName"},
                    "Ebs" : {
                        "VolumeType" : { "Ref": "EbsVolumeType"},
                        "VolumeSize" :{ "Ref": "EbsVolumeSize"},
                        "DeleteOnTermination" : true
                    }
                }
            ],
            "UserData": {
              "Fn::Base64": {
                  "Fn::Join": [
                      "\n",
                      [
                          "#!/bin/bash -xe ",
                          "yum install ruby ntp wget java-1.8.0-openjdk-devel -y",
                          "wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install \n",
                          "chmod +x ./install \n",
                          "./install auto \n",
                          "service codedeploy-agent start \n",
                          "systemctl start ntpd",
                          "systemctl enable ntpd",
                          "groupadd tomcat",
                          "useradd -M -s /bin/nologin -g tomcat -d /opt/tomcat tomcat",
                          "cd /tmp",
                          "wget http://apache.mirrors.pair.com/tomcat/tomcat-8/v8.5.34/bin/apache-tomcat-8.5.34.tar.gz",
                          "mkdir /opt/tomcat",
                          "tar xvf apache-tomcat-8*tar.gz -C /opt/tomcat --strip-components=1",
                          "cd /opt/tomcat",
                          "chgrp -R tomcat /opt/tomcat",
                          "chmod -R g+r conf",
                          "chmod g+x conf",
                          "chown -R tomcat webapps/ work/ temp/ logs/",
                          "cd /usr/lib/systemd/system",
                          "touch tomcat.service",
                          "echo '[Unit]' > tomcat.service",
                          "echo 'Description=Apache Tomcat Web Application Container' >> tomcat.service",
                          "echo 'After=syslog.target network.target' >> tomcat.service",
                          "echo '[Service]' >> tomcat.service",
                          "echo 'Type=forking' >> tomcat.service",
                          "echo 'Environment=JAVA_HOME=/usr/lib/jvm/jre' >> tomcat.service",
                          "echo 'Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid' >> tomcat.service",
                          "echo 'Environment=CATALINA_HOME=/opt/tomcat' >> tomcat.service",
                          "echo 'Environment=CATALINA_BASE=/opt/tomcat' >> tomcat.service",
                          "echo 'Environment=\"CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC\"' >> tomcat.service",
                          "echo 'Environment=\"JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom\"' >> tomcat.service",
                          "echo 'ExecStart=/opt/tomcat/bin/startup.sh' >> tomcat.service",
                          "echo 'ExecStop=/bin/kill -15 $MAINPID' >> tomcat.service",
                          "echo 'User=tomcat' >> tomcat.service",
                          "echo 'Group=tomcat' >> tomcat.service",
                          "echo 'UMask=0007' >> tomcat.service",
                          "echo 'RestartSec=10' >> tomcat.service",
                          "echo 'Restart=always' >> tomcat.service",
                          "echo '[Install]' >> tomcat.service",
                          "echo 'WantedBy=multi-user.target' >> tomcat.service",
                          "systemctl daemon-reload",
                          "#systemctl start cloudwatch.service",
                          "#systemctl enable cloudwatch.service",
                          "systemctl enable tomcat.service",
                          "systemctl start tomcat.service",
                          "cd /opt/tomcat",
                          "sudo touch bin/setenv.sh",
                          "sudo chmod 777 bin/setenv.sh",
                          "sudo echo 'export USERNAME=csye6225master' >> bin/setenv.sh",
                          "sudo echo 'export PASSWORD=csye6225password' >> bin/setenv.sh",
                          "sudo echo 'export DIALECT=org.hibernate.dialect.MySQLDialect5' >> bin/setenv.sh",
                          "sudo echo 'export DRIVER=com.mysql.jdbc.Driver' >> bin/setenv.sh",
                          "sudo echo 'export SPRING_PROFILES_ACTIVE=aws' >> bin/setenv.sh",
                          {
                            "Fn::Join": [
                              "",
                              [
                                "sudo echo 'export URL=jdbc:mysql://",
                                {
                                  "Fn::GetAtt": [
                                    "NVNCloudRDSDB",
                                    "Endpoint.Address"
                                  ]
                                },
                                ":3306/csye6225' >> bin/setenv.sh"
                              ]
                            ]
                          },
                          {
                            "Fn::Join": [
                              "",
                              [
                                "sudo echo 'export BUCKETNAME=",
                                {"Ref" : "bucketName"},
                                "' >> bin/setenv.sh"
                              ]
                            ]
                          },
                          "systemctl start tomcat.service"
                          
                      ]
                  ]
              }
            }
          }
          }      
  },
  "Outputs": {
    "WebAppS3BucketName": {
      "Description": "Web Application S3 Bucket Name",
      "Value": { "Ref": "NVNCloudS3Bucket"},
      "Export" : { "Name" : "WebAppS3BucketName" }
    },
    "EC2Instance": {
      "Description": "EC2 Instance",
      "Value": { "Ref": "EC2Instance"},
      "Export" : { "Name" : "EC2Instance" }
    }
  }

}
