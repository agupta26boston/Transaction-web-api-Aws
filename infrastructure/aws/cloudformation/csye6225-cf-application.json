{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "csye6225 application formation template",

   "Parameters": {
  "DBName": {
    "Description": "Database Name",
    "Type": "String"
  },
  "DBUser": {
    "Description": "Database User",
    "Type": "String"
  },
  "DBPassword": {
    "Description": "Database Password",
    "Type": "String"
  },
  "bucketName": {
    "Description": "Bucket name",
    "Type": "String"
  },
  "DBEngine": {
    "Description": "DB Engine",
    "Type": "String"
  },
  "DBAllocatedStorage": {
    "Description": "DB AllocatedStorage",
    "Type": "String"
  },
  "DBEngineVersion": {
    "Description": "DB EngineVersion",
    "Type": "String"
  },
  "DBInstanceClass": {
    "Description": "DB InstanceClass",
    "Type": "String"
  },
  "DBInstanceIdentifier": {
    "Description": "DBInstanceIdentifier",
    "Type": "String"
  },
  "EC2ImageId":{
      "Description": "EC2 ImageId",
      "Type": "String"
    },
    "EC2InstanceType":{
      "Description": "EC2 InstanceType",
      "Type": "String"
    },
    "EbsDeviceName" : {
      "Description": "Ebs DeviceName",
      "Type": "String"
    },
    "EbsVolumeType" : {
      "Description": "Ebs VolumeType",
      "Type": "String"
    },
    "EbsVolumeSize" : {
      "Description": "Ebs VolumeSize",
      "Type": "Number"
    }
    },
   "Resources" : {
          "VPC":{
            "Type":"AWS::EC2::VPC",
            "Properties":{
              "CidrBlock": "10.0.0.0/16",
              "EnableDnsSupport":true,
              "InstanceTenancy": "default",
                  "Tags": [{"Key": "Name","Value": {"Fn::Join":["",[{"Ref":"AWS::StackName"},"-csye6225-vpc"]]}
                      }]
                  }
                },
          "InternetGateway" : {
           "Type" : "AWS::EC2::InternetGateway",
           "Properties" : {
             "Tags" : [ {"Key" : "Name", "Value" : {"Fn::Join":["",[{"Ref":"AWS::StackName"},"-csye6225-InternetGateway"]]}
             }]
           }
         },

         "AttachGateway" : {
            "Type" : "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
              "VpcId" : { "Ref" : "VPC" },
              "InternetGatewayId" : { "Ref" : "InternetGateway" }
            }
         },

         "RouteTable" : {
           "Type" : "AWS::EC2::RouteTable",
           "Properties" : {
             "VpcId" : {"Ref" : "VPC"},
             "Tags" : [ {"Key" : "Name", "Value" : {"Fn::Join":["",[{"Ref":"AWS::StackName"},"-csye6225-public-route-table"]]}
             }]
           }
         },

         "PrivateRouteTable" : {
           "Type" : "AWS::EC2::RouteTable",
           "Properties" : {
             "VpcId" : {"Ref" : "VPC"},
             "Tags" : [ {"Key" : "Name", "Value" : {"Fn::Join":["",[{"Ref":"AWS::StackName"},"-csye6225-private-route-table"]]}
             }]
           }
         },

         "Route" : {
           "Type" : "AWS::EC2::Route",
           "DependsOn" : "AttachGateway",
           "Properties" : {
             "RouteTableId" : { "Ref" : "RouteTable" },
             "DestinationCidrBlock" : "0.0.0.0/0",
             "GatewayId" : { "Ref" : "InternetGateway" }
           }
         },

         "PublicSubnet1" : {
           "Type" : "AWS::EC2::Subnet",
           "Properties" : {
              "Tags" : [ {"Key" : "Name", "Value" :"csye6225-PublicSubnet1"} ],
              "VpcId" : { "Ref" : "VPC" },
              "MapPublicIpOnLaunch" : true,
              "CidrBlock" : "10.0.0.0/24",
              "AvailabilityZone" : "us-east-1a"
            }
         },

         "PublicSubnet2" : {
          "Type" : "AWS::EC2::Subnet",
          "Properties" : {
             "Tags" : [ {"Key" : "Name", "Value" :"csye6225-PublicSubnet2"} ],
             "VpcId" : { "Ref" : "VPC" },
             "MapPublicIpOnLaunch" : true,
             "CidrBlock" : "10.0.1.0/24",
             "AvailabilityZone" : "us-east-1b"
           }
        },

        "PublicSubnet3" : {
          "Type" : "AWS::EC2::Subnet",
          "Properties" : {
             "Tags" : [ {"Key" : "Name", "Value" :"csye6225-PublicSubnet3"} ],
             "VpcId" : { "Ref" : "VPC" },
             "MapPublicIpOnLaunch" : true,
             "CidrBlock" : "10.0.2.0/24",
             "AvailabilityZone" : "us-east-1c"
           }
        },

         "PublicSubnet1RouteTableAssociation1" : {
           "Type" : "AWS::EC2::SubnetRouteTableAssociation",
           "Properties" : {
              "SubnetId" : { "Ref" : "PublicSubnet1" },
              "RouteTableId" : { "Ref" : "RouteTable" }
           }
         },
         "PublicSubnet2RouteTableAssociation2" : {
          "Type" : "AWS::EC2::SubnetRouteTableAssociation",
          "Properties" : {
             "SubnetId" : { "Ref" : "PublicSubnet2" },
             "RouteTableId" : { "Ref" : "RouteTable" }
          }
        },
        "PublicSubnet3RouteTableAssociation3" : {
          "Type" : "AWS::EC2::SubnetRouteTableAssociation",
          "Properties" : {
             "SubnetId" : { "Ref" : "PublicSubnet3" },
             "RouteTableId" : { "Ref" : "RouteTable" }
          }
        },
        "DBServerSubnet1" : {
          "Type" : "AWS::EC2::Subnet",
          "Properties" : {
             "Tags" : [ {"Key" : "Name", "Value" :"csye6225-DBSubnet1"} ],
             "VpcId" : { "Ref" : "VPC" },
             "CidrBlock" : "10.0.3.0/24",
             "AvailabilityZone" : "us-east-1a"
        }
        },
        "DBServerSubnet2" : {
          "Type" : "AWS::EC2::Subnet",
          "Properties" : {
             "Tags" : [ {"Key" : "Name", "Value" :"csye6225-DBSubnet2"} ],
             "VpcId" : { "Ref" : "VPC" },
             "CidrBlock" : "10.0.4.0/24",
             "AvailabilityZone" : "us-east-1b"
        }
        },
      "DBServerSubnet3" : {
        "Type" : "AWS::EC2::Subnet",
        "Properties" : {
           "Tags" : [ {"Key" : "Name", "Value" :"csye6225-DBSubnet3"} ],
           "VpcId" : { "Ref" : "VPC" },
           "CidrBlock" : "10.0.5.0/24",
           "AvailabilityZone" : "us-east-1c"
      }
        },
        "DBSubnetRouteTableAssociation1" : {
          "Type" : "AWS::EC2::SubnetRouteTableAssociation",
          "Properties" : {
             "SubnetId" : { "Ref": "DBServerSubnet1" },
             "RouteTableId" : { "Ref" : "PrivateRouteTable" }
          }
        },
        "DBSubnetRouteTableAssociation2" : {
          "Type" : "AWS::EC2::SubnetRouteTableAssociation",
          "Properties" : {
             "SubnetId" : { "Ref": "DBServerSubnet2" },
             "RouteTableId" : { "Ref" : "PrivateRouteTable" }
          }
        },

        "DBSubnetRouteTableAssociation3" : {
          "Type" : "AWS::EC2::SubnetRouteTableAssociation",
          "Properties" : {
             "SubnetId" : { "Ref": "DBServerSubnet3" },
             "RouteTableId" : { "Ref" : "PrivateRouteTable" }
          }
        },

        "NVNDBSubnetGroup": {
          "Type": "AWS::RDS::DBSubnetGroup",
          "Properties": {
              "DBSubnetGroupDescription": "Subnet group for RDS",
              "Tags" : [ {"Key" : "Name", "Value" :"csye6225-DBSubnetGroup"}],
              "SubnetIds": [{
                  "Ref": "DBServerSubnet1"
              },
              {
                  "Ref": "DBServerSubnet2"
              },
              {
                "Ref": "DBServerSubnet3"
            }]
          }
        },

          "NVNCloudSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
              "Tags" : [ {"Key" : "Name", "Value" :"csye6225-webapp"}],
              "GroupDescription": " security group for ec2 instances that will host web application",
              "VpcId": { "Ref": "VPC"},
              "SecurityGroupIngress" : [
                {
                  "IpProtocol" : "tcp",
                  "FromPort" : "22",
                  "ToPort" : "22",
                  "CidrIp" : "0.0.0.0/0"
                },
                {
                    "IpProtocol" : "tcp",
                    "FromPort" : "80",
                    "ToPort" : "80",
                    "CidrIp" : "0.0.0.0/0"
               },
               {
                   "IpProtocol" : "tcp",
                   "FromPort" : "443",
                   "ToPort" : "443",
                   "CidrIp" : "0.0.0.0/0"
              }]
            }
          },

          "NVNCloudRDSSecurityGroup": {
             "Type": "AWS::EC2::SecurityGroup",
             "Properties": {
               "Tags" : [ {"Key" : "Name", "Value" :"csye6225-rds"}],
               "GroupDescription": "Security group for RDS instances",
               "VpcId": { "Ref": "VPC"},
               "SecurityGroupIngress" : [
                 {
                   "IpProtocol" : "tcp",
                   "FromPort" : "5432",
                   "ToPort" : "5432",
                   "SourceSecurityGroupId" : { "Ref" : "NVNCloudSecurityGroup"}
                }]
             }
          },

    "EC2Instance": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
         
         "TagName": [ {"Key" : "applicationname", "Value" :"assignment0506"}],
          "ImageId": { "Ref": "EC2ImageId" },
          "InstanceType": { "Ref": "EC2InstanceType" },
           "SubnetId" : { "Ref": "PublicSubnet1"},
           "SecurityGroupIds" : [{ "Fn::GetAtt": [ "NVNCloudSecurityGroup", "GroupId" ] }],
           "KeyName" : "csye6225-keypair",
          "BlockDeviceMappings": [
                {
                    "DeviceName" : { "Ref": "EbsDeviceName"},
                    "Ebs" : {
                        "VolumeType" : { "Ref": "EbsVolumeType"},
                        "VolumeSize" :{ "Ref": "EbsVolumeSize"},
                        "DeleteOnTermination" : false
                    }
                }
            ],
            "UserData": {
              "Fn::Base64": {
                  "Fn::Join": [
                      "\n",
                      [
                          "#!/bin/bash -xe ",
                          "yum install ruby ntp wget java-1.8.0-openjdk-devel -y",
                          "systemctl start ntpd",
                          "systemctl enable ntpd",
                          "groupadd tomcat",
                          "useradd -M -s /bin/nologin -g tomcat -d /opt/tomcat tomcat",
                          "cd /tmp",
                          "wget http://apache.mirrors.pair.com/tomcat/tomcat-8/v8.5.34/bin/apache-tomcat-8.5.34.tar.gz",
                          "mkdir /opt/tomcat",
                          "tar xvf apache-tomcat-8*tar.gz -C /opt/tomcat --strip-components=1",
                          "cd /opt/tomcat",
                          "chgrp -R tomcat /opt/tomcat",
                          "chmod -R g+r conf",
                          "chmod g+x conf",
                          "chown -R tomcat webapps/ work/ temp/ logs/",
                          "cd /usr/lib/systemd/system",
                          "touch tomcat.service",
                          "echo '[Unit]' > tomcat.service",
                          "echo 'Description=Apache Tomcat Web Application Container' >> tomcat.service",
                          "echo 'After=syslog.target network.target' >> tomcat.service",
                          "echo '[Service]' >> tomcat.service",
                          "echo 'Type=forking' >> tomcat.service",
                          "echo 'Environment=JAVA_HOME=/usr/lib/jvm/jre' >> tomcat.service",
                          "echo 'Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid' >> tomcat.service",
                          "echo 'Environment=CATALINA_HOME=/opt/tomcat' >> tomcat.service",
                          "echo 'Environment=CATALINA_BASE=/opt/tomcat' >> tomcat.service",
                          "echo 'Environment=\"CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC\"' >> tomcat.service",
                          "echo 'Environment=\"JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom\"' >> tomcat.service",
                          "echo 'ExecStart=/opt/tomcat/bin/startup.sh' >> tomcat.service",
                          "echo 'ExecStop=/bin/kill -15 $MAINPID' >> tomcat.service",
                          "echo 'User=tomcat' >> tomcat.service",
                          "echo 'Group=tomcat' >> tomcat.service",
                          "echo 'UMask=0007' >> tomcat.service",
                          "echo 'RestartSec=10' >> tomcat.service",
                          "echo 'Restart=always' >> tomcat.service",
                          "echo '[Install]' >> tomcat.service",
                          "echo 'WantedBy=multi-user.target' >> tomcat.service",
                          "systemctl daemon-reload",
                          "#systemctl start cloudwatch.service",
                          "#systemctl enable cloudwatch.service",
                          "systemctl enable tomcat.service",
                          "systemctl start tomcat.service"
                      ]
                  ]
              }
            }
          }
          },
        
      "myDynamoDBTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
      "AttributeDefinitions": [
        {
          "AttributeName": "Id",
          "AttributeType": "S"
        }
      ],
      "KeySchema": [
        {
          "AttributeName": "Id",
          "KeyType": "HASH"
        }
      ],
      "ProvisionedThroughput": {
        "ReadCapacityUnits": "5",
        "WriteCapacityUnits": "5"
      },
      "TableName": "csye6225"
          }
      },

      "myS3Bucket": {
        "Type": "AWS::S3::Bucket",
        "Properties": {
          "BucketName": { "Ref": "bucketName" }
        }
      },

      "MyDB": {
        "Type": "AWS::RDS::DBInstance",
        "Properties": {
          "Engine": { "Ref": "DBEngine"},
          "AllocatedStorage": { "Ref": "DBAllocatedStorage"},
          "EngineVersion": { "Ref": "DBEngineVersion"},
          "DBInstanceClass": { "Ref": "DBInstanceClass"},
          "MultiAZ": "false",
          "DBInstanceIdentifier": { "Ref": "DBInstanceIdentifier"},
          "MasterUsername": { "Ref": "DBUser" },
          "MasterUserPassword": { "Ref": "DBPassword" },
          "PubliclyAccessible": "false",
          "DBName": { "Ref": "DBName" },
          "VPCSecurityGroups": [{ "Ref" : "NVNCloudRDSSecurityGroup" }],
          "DBSubnetGroupName": { "Ref" : "NVNDBSubnetGroup" }        
        },
        "DeletionPolicy": "Snapshot"
      }
       

     }

}
